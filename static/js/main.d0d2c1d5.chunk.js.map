{"version":3,"sources":["App.js","index.js"],"names":["state","n","e","text","type","errors","nChangeHandler","value","setState","eChangeHandler","textChangeHandler","typeChangeHandler","submitHandler","console","log","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","size","Segment","stacked","Message","negative","visible","this","hidden","Group","widths","Input","fluid","onChange","label","placeholder","Dropdown","selection","options","key","Button","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"4hBAMEA,MAAQ,CACNC,EAAG,GACHC,EAAG,GACHC,KAAM,GACNC,KAAM,GACNC,QAAQ,G,EAGVC,eAAiB,SAACJ,EAAGK,GACjB,EAAKC,SAAS,CACVP,EAAGM,EAAMA,S,EAIjBE,eAAiB,SAACP,EAAGK,GACjB,EAAKC,SAAS,CACVN,EAAGK,EAAMA,S,EAIjBG,kBAAoB,SAACR,EAAGK,GACtB,EAAKC,SAAS,CACVL,KAAMI,EAAMA,S,EAIlBI,kBAAoB,SAACT,EAAGK,GACtB,EAAKC,SAAS,CACVJ,KAAMG,EAAMA,S,EAIlBK,cAAgB,WACZC,QAAQC,IAAI,EAAKd,OACG,IAAhB,EAAKA,MAAMC,GAA2B,IAAhB,EAAKD,MAAME,GAA8B,IAAnB,EAAKF,MAAMI,MAAiC,IAAnB,EAAKJ,MAAMG,KAChF,EAAKK,SAAS,CACVH,QAAQ,IAId,EAAKG,SAAS,CACVH,QAAQ,K,wEAShB,OACE,6BACM,kBAACU,EAAA,EAAD,CAAMC,UAAU,SAASC,MAAO,CAAEC,OAAQ,SAAWC,cAAc,UAC/D,kBAACJ,EAAA,EAAKK,OAAN,CAAaH,MAAO,CAAEI,SAAU,MAC5B,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAM,OAAOR,UAAU,UAAvC,kBACA,kBAACS,EAAA,EAAD,CAAMC,KAAK,SACP,kBAACC,EAAA,EAAD,CAASC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAASC,UAAQ,EAACC,QAASC,KAAKhC,MAAMK,OAAQ4B,QAASD,KAAKhC,MAAMK,QAC9D,kBAACwB,EAAA,EAAQP,OAAT,wCACA,0FAEA,kBAACG,EAAA,EAAKS,MAAN,CAAYC,OAAO,SACf,kBAACV,EAAA,EAAKW,MAAN,CAAYC,OAAK,EAACC,SAAUN,KAAK1B,eAAgBiC,MAAM,iBAAiBC,YAAY,mCACpF,kBAACf,EAAA,EAAKW,MAAN,CAAYC,OAAK,EAACC,SAAUN,KAAKvB,eAAgB8B,MAAM,iBAAiBC,YAAY,8BACpF,kBAACC,EAAA,EAAD,CACIJ,OAAK,EACLK,WAAS,EACTH,MAAM,qBACNC,YAAY,qBACZG,QAAS,CAAC,CAACC,IAAK,KAAMrC,MAAO,KAAMJ,KAAM,WAAY,CAACyC,IAAK,KAAMrC,MAAO,KAAMJ,KAAM,YACpFmC,SAAUN,KAAKrB,qBAGvB,kBAACc,EAAA,EAAKS,MAAN,CAAYC,OAAO,SACf,kBAACV,EAAA,EAAKW,MAAN,CAAYC,OAAK,EAACC,SAAUN,KAAKtB,kBAAmBN,KAAyB,MAAnB4B,KAAKhC,MAAMI,KAAe,WAAa,OAAQmC,MAAO,aAAaC,YAAY,mBAE7I,kBAACf,EAAA,EAAKS,MAAN,CAAYC,OAAO,SACf,kBAACU,EAAA,EAAD,CAAQrB,MAAM,OAAOa,OAAK,EAACS,QAASd,KAAKpB,eAAzC,oB,GA9EHmC,cCD7BC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d0d2c1d5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Form, Header, Segment, Button, Dropdown, Message } from 'semantic-ui-react'\r\n\r\nimport './App.css'\r\n\r\nexport default class extends Component {\r\n  state = {\r\n    n: \"\",\r\n    e: \"\",\r\n    text: \"\",\r\n    type: \"\",\r\n    errors: false\r\n  }\r\n\r\n  nChangeHandler = (e, value) => {\r\n      this.setState({\r\n          n: value.value\r\n      })\r\n  }\r\n\r\n  eChangeHandler = (e, value) => {\r\n      this.setState({\r\n          e: value.value\r\n      })\r\n  }\r\n\r\n  textChangeHandler = (e, value) => {\r\n    this.setState({\r\n        text: value.value\r\n    })\r\n  }\r\n\r\n  typeChangeHandler = (e, value) => {\r\n    this.setState({\r\n        type: value.value\r\n    })\r\n  }\r\n\r\n  submitHandler = () => {\r\n      console.log(this.state)\r\n      if (this.state.n == \"\" || this.state.e == \"\" || this.state.type == \"\" || this.state.text == \"\") {\r\n          this.setState({\r\n              errors: true\r\n          })\r\n      }\r\n      else {\r\n        this.setState({\r\n            errors: false\r\n        })\r\n        //other\r\n      }\r\n      \r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                <Grid.Column style={{ maxWidth: 700 }}>\r\n                    <Header as='h1' color='teal' textAlign='center'>RSA Encryption</Header>\r\n                    <Form size='large'>\r\n                        <Segment stacked>\r\n                        <Message negative visible={this.state.errors} hidden={!this.state.errors}>\r\n                            <Message.Header>There are errors with this form</Message.Header>\r\n                            <p>Please make sure all of the fields are filled out properly</p>\r\n                        </Message>\r\n                            <Form.Group widths='equal'>\r\n                                <Form.Input fluid onChange={this.nChangeHandler} label=\"Choose your N:\" placeholder=\"N = p * q where p, q are prime\" />\r\n                                <Form.Input fluid onChange={this.eChangeHandler} label=\"Choose your e:\" placeholder=\"gcd(e, (p-1) * (q-1)) = 1\" /> \r\n                                <Dropdown \r\n                                    fluid\r\n                                    selection\r\n                                    label=\"Encrypt or Decrypt\" \r\n                                    placeholder='Encrypt or Decrypt' \r\n                                    options={[{key: 'en', value: 'en', text: 'Encrypt'}, {key: 'de', value: 'de', text: 'Decrypt'}]} \r\n                                    onChange={this.typeChangeHandler}    \r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group widths='equal'>\r\n                                <Form.Input fluid onChange={this.textChangeHandler} type={this.state.type == \"en\" ? 'password' : 'text'} label= \"Enter text\" placeholder=\"Enter text...\" />\r\n                            </Form.Group>\r\n                            <Form.Group widths='equal'>\r\n                                <Button color='teal' fluid onClick={this.submitHandler}>Submit</Button>\r\n                            </Form.Group>\r\n                        </Segment>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}